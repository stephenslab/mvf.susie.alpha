#rm(list = ls())
library(ashr)
library(mashr)
library(abind)
library(wavethresh)
library(mvtnorm)
library(mixsqp)
library(susiF.alpha)
library(mvf.susie.alpha)
set.seed(13)
L=2

min_levres <- 4

#gene expression effect of SNP 1 and SNP2
f01  <-  0.001
f02  <- -0.001


#effect of SNP 1 and SNP2 on mark 1
lev_res1 <- 5
temp_func <-  simu_IBSS_per_level(lev_res1)
f11 <-  temp_func$sim_func
temp_func <-  simu_IBSS_per_level(lev_res1)
f12 <-  temp_func$sim_func
#effect of SNP 1 and SNP2 on mark 2
lev_res2 <- 7
temp_func <-  simu_IBSS_per_level(lev_res2)
f21 <-  temp_func$sim_func
temp_func <-  simu_IBSS_per_level(lev_res2)
f22 <-  temp_func$sim_func

#effect of SNP 1 and SNP2 on 2 CpGs

f31  <-  c(0.001 ,-0.001 )
f32  <-  c(-0.001,0.001)





indx_lst1 <- susiF.alpha::gen_wavelet_indx(lev_res = lev_res1)
indx_lst2 <- susiF.alpha::gen_wavelet_indx(lev_res = lev_res2)

N = 50

#Number of covariates

P =10

#Choosing which variable will have an effect
pos1 <- 1
pos2 <- 2



G = matrix(sample(c(0, 1,2), size=N*P, replace=T), nrow=N, ncol=P) #Genotype
beta1       <- 1



noisy.data  <- list()
 for ( i in 1:N)
 {
  
    Y0               <- f01*G[i,pos1]+f02*G[i,pos2] +rnorm(1, sd=0.5) #gene expression
    Y1               <- t( beta1*G[i,pos1]*f11+ beta1*G[i,pos2]*f12+rnorm(2^lev_res1))#mark 1
    Y2               <- t( beta1*G[i,pos1]*f21+ beta1*G[i,pos2]*f22 +rnorm(2^lev_res2))#mark 2
    Y3               <-  f31*G[i, pos1]+f32*G[i, pos2] + c(rnorm(2, sd=c(1,5)))
   noisy.data [[i]] <-  list(Y0,Y1,Y2,Y3)
    
   }
#for ( i in 1:N)
#{
  
#  Y0               <-  rnorm(1, sd=0.5) #gene expression
#  Y1               <-  rnorm(2^lev_res1)#mark 1
#  Y2               <- rnorm(2^lev_res2)#mark 2
#  Y3               <-   c(rnorm(2, sd=c(1,5)))
#  noisy.data [[i]] <-  list(Y0,Y1,Y2,Y3)
  
#}

noisy.data[[1]]
noisy.data[[2]]
 
library(mvf.susie.alpha)
out <- multfsusie(Y=noisy.data,
                  X=G,
                  L=6,maxit = 20)
out$alpha
out$sigma2
sqrt(0.27)

plot( out $ELBO) 


abline(a=max(out$ELBO),b=0)
plot(diff(out$ELBO ))
abline(a=0,b=0)
 (out$ELBO )
( out$alpha)
diff(out$ELBO )

